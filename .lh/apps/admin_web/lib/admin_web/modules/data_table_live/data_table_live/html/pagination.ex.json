{
    "sourceFile": "apps/admin_web/lib/admin_web/modules/data_table_live/data_table_live/html/pagination.ex",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 13,
            "patches": [
                {
                    "date": 1658039737380,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1658047840323,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,10 +18,10 @@\n     numbered_buttons = numbered_buttons(params, page, pages)\n     next_button = paginate_button(params, :next, page, pages)\n \n     ([previous_button] ++ numbered_buttons ++ [next_button])\n-    |> Helpers.tag(:ul, class: \"exz-pagination-ul\")\n-    |> Helpers.tag(:nav, class: \"exz-pagination-nav\")\n+    |> Helpers.tag(:ul, class: Params.gt_dt_classes(:pager_ul))\n+    |> Helpers.tag(:nav, class: Params.gt_dt_classes(:pager_nav))\n   end\n \n   # Handle the case where there is only a single page, just gives us some disabled buttons\n   @spec numbered_buttons(Params.t(), page, pages) :: [{:safe, iolist}]\n"
                },
                {
                    "date": 1658047865050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,10 +18,10 @@\n     numbered_buttons = numbered_buttons(params, page, pages)\n     next_button = paginate_button(params, :next, page, pages)\n \n     ([previous_button] ++ numbered_buttons ++ [next_button])\n-    |> Helpers.tag(:ul, class: Params.gt_dt_classes(:pager_ul))\n-    |> Helpers.tag(:nav, class: Params.gt_dt_classes(:pager_nav))\n+    |> Helpers.tag(:ul, class: Params.gt_dt_class(:pager_ul))\n+    |> Helpers.tag(:nav, class: Params.gt_dt_class(:pager_nav))\n   end\n \n   # Handle the case where there is only a single page, just gives us some disabled buttons\n   @spec numbered_buttons(Params.t(), page, pages) :: [{:safe, iolist}]\n"
                },
                {
                    "date": 1658047881440,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,10 +18,10 @@\n     numbered_buttons = numbered_buttons(params, page, pages)\n     next_button = paginate_button(params, :next, page, pages)\n \n     ([previous_button] ++ numbered_buttons ++ [next_button])\n-    |> Helpers.tag(:ul, class: Params.gt_dt_class(:pager_ul))\n-    |> Helpers.tag(:nav, class: Params.gt_dt_class(:pager_nav))\n+    |> Helpers.tag(:ul, class: Params.get_dt_class(:pager_ul))\n+    |> Helpers.tag(:nav, class: Params.get_dt_class(:pager_nav))\n   end\n \n   # Handle the case where there is only a single page, just gives us some disabled buttons\n   @spec numbered_buttons(Params.t(), page, pages) :: [{:safe, iolist}]\n"
                },
                {
                    "date": 1658047907521,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n       style: \"cursor: pointer\",\n       \"phx-click\": \"change_page\",\n       \"phx-value-page\": page + 1\n     )\n-    |> Helpers.tag(:li, class: \"exz-pagination-li\")\n+    |> Helpers.tag(:li, class: Params.get_dt_class(:pager_li))\n   end\n \n   defp paginate_button(%Params{} = params, :previous, page, _pages) do\n     params\n"
                },
                {
                    "date": 1658047937688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n       style: \"cursor: pointer\",\n       \"phx-click\": \"change_page\",\n       \"phx-value-page\": page - 1\n     )\n-    |> Helpers.tag(:li, class: \"exz-pagination-li\")\n+    |> Helpers.tag(:li, class: Params.get_dt_class(:pager_li))\n   end\n \n   defp paginate_button(_params, page, page, _pages) when is_integer(page) do\n     Helpers.tag(page, :a, class: \"exz-pagination-a exz-pagination-width\")\n@@ -97,9 +97,9 @@\n       style: \"cursor: pointer\",\n       \"phx-click\": \"change_page\",\n       \"phx-value-page\": page\n     )\n-    |> Helpers.tag(:li, class: \"exz-pagination-li\")\n+    |> Helpers.tag(:li, class: Params.get_dt_class(:pager_li))\n   end\n \n   @spec filter_pages(pos_integer, pos_integer) :: [pos_integer | :dots]\n   @doc \"Selects the page buttons we need for pagination\"\n"
                },
                {
                    "date": 1658048006427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,22 +45,22 @@\n   defp paginate_button(%Params{} = params, :next, page, pages) when page == pages do\n     params\n     |> Text.text(:next)\n     |> Helpers.tag(:a, class: \"exz-pagination-a\", tabindex: \"-1\")\n-    |> Helpers.tag(:li, class: \"exz-pagination-li-disabled\")\n+    |> Helpers.tag(:li, class: Params.get_dt_class(:pager_li) <> \"-disabled\")\n   end\n \n   defp paginate_button(%Params{} = params, :previous, 1, _pages) do\n     params\n     |> Text.text(:previous)\n     |> Helpers.tag(:a, class: \"exz-pagination-a\", tabindex: \"-1\")\n-    |> Helpers.tag(:li, class: \"exz-pagination-li-disabled\")\n+    |> Helpers.tag(:li, class: Params.get_dt_class(:pager_li) <> \"-disabled\")\n   end\n \n   defp paginate_button(_params, :dots, _page, _pages) do\n     \"....\"\n     |> Helpers.tag(:a, class: \"exz-pagination-a exz-pagination-width\", tabindex: \"-1\")\n-    |> Helpers.tag(:li, class: \"exz-pagination-li-disabled\")\n+    |> Helpers.tag(:li, class: Params.get_dt_class(:pager_li) <> \"-disabled\")\n   end\n \n   defp paginate_button(%Params{} = params, :next, page, _pages) do\n     params\n@@ -87,9 +87,9 @@\n   end\n \n   defp paginate_button(_params, page, page, _pages) when is_integer(page) do\n     Helpers.tag(page, :a, class: \"exz-pagination-a exz-pagination-width\")\n-    |> Helpers.tag(:li, class: \"exz-pagination-li-active\")\n+    |> Helpers.tag(:li, class: Params.get_dt_class(:pager_li) <> \"-active\")\n   end\n \n   defp paginate_button(_params, page, _page, _pages) when is_integer(page) do\n     Helpers.tag(page, :a,\n"
                },
                {
                    "date": 1658048775807,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n   defp paginate_button(%Params{} = params, :previous, 1, _pages) do\n     params\n     |> Text.text(:previous)\n     |> Helpers.tag(:a, class: \"exz-pagination-a\", tabindex: \"-1\")\n-    |> Helpers.tag(:li, class: Params.get_dt_class(:pager_li) <> \"-disabled\")\n+    |> Helpers.tag(:li, class: Params.get_dt_class(:pager_li) <> \" \" <> Params.get_dt_class(:pager_li_disabled))\n   end\n \n   defp paginate_button(_params, :dots, _page, _pages) do\n     \"....\"\n"
                },
                {
                    "date": 1658048813235,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n   defp paginate_button(%Params{} = params, :next, page, pages) when page == pages do\n     params\n     |> Text.text(:next)\n     |> Helpers.tag(:a, class: \"exz-pagination-a\", tabindex: \"-1\")\n-    |> Helpers.tag(:li, class: Params.get_dt_class(:pager_li) <> \"-disabled\")\n+    |> Helpers.tag(:li, class: Params.get_dt_class(:pager_li) <> \" \" <> Params.get_dt_class(:pager_li_disabled)\n   end\n \n   defp paginate_button(%Params{} = params, :previous, 1, _pages) do\n     params\n@@ -58,9 +58,9 @@\n \n   defp paginate_button(_params, :dots, _page, _pages) do\n     \"....\"\n     |> Helpers.tag(:a, class: \"exz-pagination-a exz-pagination-width\", tabindex: \"-1\")\n-    |> Helpers.tag(:li, class: Params.get_dt_class(:pager_li) <> \"-disabled\")\n+    |> Helpers.tag(:li, class: Params.get_dt_class(:pager_li) <> \" \" <> Params.get_dt_class(:pager_li_disabled)\n   end\n \n   defp paginate_button(%Params{} = params, :next, page, _pages) do\n     params\n@@ -87,9 +87,9 @@\n   end\n \n   defp paginate_button(_params, page, page, _pages) when is_integer(page) do\n     Helpers.tag(page, :a, class: \"exz-pagination-a exz-pagination-width\")\n-    |> Helpers.tag(:li, class: Params.get_dt_class(:pager_li) <> \"-active\")\n+    |> Helpers.tag(:li, class: Params.get_dt_class(:pager_li) <> \" \" <> Params.get_dt_class(:pager_li_active)\n   end\n \n   defp paginate_button(_params, page, _page, _pages) when is_integer(page) do\n     Helpers.tag(page, :a,\n"
                },
                {
                    "date": 1658048834535,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,22 +45,22 @@\n   defp paginate_button(%Params{} = params, :next, page, pages) when page == pages do\n     params\n     |> Text.text(:next)\n     |> Helpers.tag(:a, class: \"exz-pagination-a\", tabindex: \"-1\")\n-    |> Helpers.tag(:li, class: Params.get_dt_class(:pager_li) <> \" \" <> Params.get_dt_class(:pager_li_disabled)\n+    |> Helpers.tag(:li, class: Params.get_dt_class(:pager_li) <> \" \" <> Params.get_dt_class(:pager_li_disable)\n   end\n \n   defp paginate_button(%Params{} = params, :previous, 1, _pages) do\n     params\n     |> Text.text(:previous)\n     |> Helpers.tag(:a, class: \"exz-pagination-a\", tabindex: \"-1\")\n-    |> Helpers.tag(:li, class: Params.get_dt_class(:pager_li) <> \" \" <> Params.get_dt_class(:pager_li_disabled))\n+    |> Helpers.tag(:li, class: Params.get_dt_class(:pager_li) <> \" \" <> Params.get_dt_class(:pager_li_disable))\n   end\n \n   defp paginate_button(_params, :dots, _page, _pages) do\n     \"....\"\n     |> Helpers.tag(:a, class: \"exz-pagination-a exz-pagination-width\", tabindex: \"-1\")\n-    |> Helpers.tag(:li, class: Params.get_dt_class(:pager_li) <> \" \" <> Params.get_dt_class(:pager_li_disabled)\n+    |> Helpers.tag(:li, class: Params.get_dt_class(:pager_li) <> \" \" <> Params.get_dt_class(:pager_li_disable)\n   end\n \n   defp paginate_button(%Params{} = params, :next, page, _pages) do\n     params\n"
                },
                {
                    "date": 1658048860597,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n   defp paginate_button(%Params{} = params, :next, page, pages) when page == pages do\n     params\n     |> Text.text(:next)\n     |> Helpers.tag(:a, class: \"exz-pagination-a\", tabindex: \"-1\")\n-    |> Helpers.tag(:li, class: Params.get_dt_class(:pager_li) <> \" \" <> Params.get_dt_class(:pager_li_disable)\n+    |> Helpers.tag(:li, class: Params.get_dt_class(:pager_li) <> \" \" <> Params.get_dt_class(:pager_li_disable))\n   end\n \n   defp paginate_button(%Params{} = params, :previous, 1, _pages) do\n     params\n"
                },
                {
                    "date": 1658048880020,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n \n   defp paginate_button(_params, :dots, _page, _pages) do\n     \"....\"\n     |> Helpers.tag(:a, class: \"exz-pagination-a exz-pagination-width\", tabindex: \"-1\")\n-    |> Helpers.tag(:li, class: Params.get_dt_class(:pager_li) <> \" \" <> Params.get_dt_class(:pager_li_disable)\n+    |> Helpers.tag(:li, class: Params.get_dt_class(:pager_li) <> \" \" <> Params.get_dt_class(:pager_li_disable))\n   end\n \n   defp paginate_button(%Params{} = params, :next, page, _pages) do\n     params\n@@ -87,9 +87,9 @@\n   end\n \n   defp paginate_button(_params, page, page, _pages) when is_integer(page) do\n     Helpers.tag(page, :a, class: \"exz-pagination-a exz-pagination-width\")\n-    |> Helpers.tag(:li, class: Params.get_dt_class(:pager_li) <> \" \" <> Params.get_dt_class(:pager_li_active)\n+    |> Helpers.tag(:li, class: Params.get_dt_class(:pager_li) <> \" \" <> Params.get_dt_class(:pager_li_active))\n   end\n \n   defp paginate_button(_params, page, _page, _pages) when is_integer(page) do\n     Helpers.tag(page, :a,\n"
                },
                {
                    "date": 1658056154015,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n   defp paginate_button(%Params{} = params, :next, page, _pages) do\n     params\n     |> Text.text(:next)\n     |> Helpers.tag(:a,\n-      class: \"exz-pagination-a\",\n+      class: Params.get_dt_class(:pager_link),\n       style: \"cursor: pointer\",\n       \"phx-click\": \"change_page\",\n       \"phx-value-page\": page + 1\n     )\n"
                },
                {
                    "date": 1658056213744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,22 +44,22 @@\n   @spec paginate_button(Params.t(), name, page, pages) :: {:safe, iolist}\n   defp paginate_button(%Params{} = params, :next, page, pages) when page == pages do\n     params\n     |> Text.text(:next)\n-    |> Helpers.tag(:a, class: \"exz-pagination-a\", tabindex: \"-1\")\n+    |> Helpers.tag(:a, class: Params.get_dt_class(:pager_link), tabindex: \"-1\")\n     |> Helpers.tag(:li, class: Params.get_dt_class(:pager_li) <> \" \" <> Params.get_dt_class(:pager_li_disable))\n   end\n \n   defp paginate_button(%Params{} = params, :previous, 1, _pages) do\n     params\n     |> Text.text(:previous)\n-    |> Helpers.tag(:a, class: \"exz-pagination-a\", tabindex: \"-1\")\n+    |> Helpers.tag(:a, class: Params.get_dt_class(:pager_link), tabindex: \"-1\")\n     |> Helpers.tag(:li, class: Params.get_dt_class(:pager_li) <> \" \" <> Params.get_dt_class(:pager_li_disable))\n   end\n \n   defp paginate_button(_params, :dots, _page, _pages) do\n     \"....\"\n-    |> Helpers.tag(:a, class: \"exz-pagination-a exz-pagination-width\", tabindex: \"-1\")\n+    |> Helpers.tag(:a, class: Params.get_dt_class(:pager_link) <> \" exz-pagination-width\", tabindex: \"-1\")\n     |> Helpers.tag(:li, class: Params.get_dt_class(:pager_li) <> \" \" <> Params.get_dt_class(:pager_li_disable))\n   end\n \n   defp paginate_button(%Params{} = params, :next, page, _pages) do\n@@ -77,24 +77,24 @@\n   defp paginate_button(%Params{} = params, :previous, page, _pages) do\n     params\n     |> Text.text(:previous)\n     |> Helpers.tag(:a,\n-      class: \"exz-pagination-a\",\n+      class: Params.get_dt_class(:pager_link),\n       style: \"cursor: pointer\",\n       \"phx-click\": \"change_page\",\n       \"phx-value-page\": page - 1\n     )\n     |> Helpers.tag(:li, class: Params.get_dt_class(:pager_li))\n   end\n \n   defp paginate_button(_params, page, page, _pages) when is_integer(page) do\n-    Helpers.tag(page, :a, class: \"exz-pagination-a exz-pagination-width\")\n+    Helpers.tag(page, :a, class: Params.get_dt_class(:pager_link) <> \" exz-pagination-width\")\n     |> Helpers.tag(:li, class: Params.get_dt_class(:pager_li) <> \" \" <> Params.get_dt_class(:pager_li_active))\n   end\n \n   defp paginate_button(_params, page, _page, _pages) when is_integer(page) do\n     Helpers.tag(page, :a,\n-      class: \"exz-pagination-a exz-pagination-width\",\n+      class: Params.get_dt_class(:pager_link) <> \" exz-pagination-width\",\n       style: \"cursor: pointer\",\n       \"phx-click\": \"change_page\",\n       \"phx-value-page\": page\n     )\n"
                }
            ],
            "date": 1658039737380,
            "name": "Commit-0",
            "content": "defmodule DataTableLive.HTML.Pagination do\n  @moduledoc \"\"\"\n   For building out the pagination buttons above and below the table\n  \"\"\"\n\n  alias DataTableLive.HTML.Helpers\n  alias DataTableLive.{Params, Text}\n\n  @type name :: :next | :previous | :dots | pos_integer\n  @type page :: pos_integer\n  @type pages :: pos_integer\n\n  @doc \"Builds the pagination selector with page numbers, next and back etc.\"\n  @spec build(Params.t()) :: {:safe, iolist}\n  def build(%Params{page: page} = params) do\n    pages = page_count(params)\n    previous_button = paginate_button(params, :previous, page, pages)\n    numbered_buttons = numbered_buttons(params, page, pages)\n    next_button = paginate_button(params, :next, page, pages)\n\n    ([previous_button] ++ numbered_buttons ++ [next_button])\n    |> Helpers.tag(:ul, class: \"exz-pagination-ul\")\n    |> Helpers.tag(:nav, class: \"exz-pagination-nav\")\n  end\n\n  # Handle the case where there is only a single page, just gives us some disabled buttons\n  @spec numbered_buttons(Params.t(), page, pages) :: [{:safe, iolist}]\n  defp numbered_buttons(params, page, pages) do\n    pages\n    |> filter_pages(page)\n    |> Enum.map(&paginate_button(params, &1, page, pages))\n  end\n\n  @doc \"A partial page is still a page.\"\n  @spec page_count(Params.t()) :: pages\n  def page_count(%Params{count: count, per_page: per_page}) do\n    if rem(count, per_page) > 0 do\n      div(count, per_page) + 1\n    else\n      count |> div(per_page) |> max(1)\n    end\n  end\n\n  @spec paginate_button(Params.t(), name, page, pages) :: {:safe, iolist}\n  defp paginate_button(%Params{} = params, :next, page, pages) when page == pages do\n    params\n    |> Text.text(:next)\n    |> Helpers.tag(:a, class: \"exz-pagination-a\", tabindex: \"-1\")\n    |> Helpers.tag(:li, class: \"exz-pagination-li-disabled\")\n  end\n\n  defp paginate_button(%Params{} = params, :previous, 1, _pages) do\n    params\n    |> Text.text(:previous)\n    |> Helpers.tag(:a, class: \"exz-pagination-a\", tabindex: \"-1\")\n    |> Helpers.tag(:li, class: \"exz-pagination-li-disabled\")\n  end\n\n  defp paginate_button(_params, :dots, _page, _pages) do\n    \"....\"\n    |> Helpers.tag(:a, class: \"exz-pagination-a exz-pagination-width\", tabindex: \"-1\")\n    |> Helpers.tag(:li, class: \"exz-pagination-li-disabled\")\n  end\n\n  defp paginate_button(%Params{} = params, :next, page, _pages) do\n    params\n    |> Text.text(:next)\n    |> Helpers.tag(:a,\n      class: \"exz-pagination-a\",\n      style: \"cursor: pointer\",\n      \"phx-click\": \"change_page\",\n      \"phx-value-page\": page + 1\n    )\n    |> Helpers.tag(:li, class: \"exz-pagination-li\")\n  end\n\n  defp paginate_button(%Params{} = params, :previous, page, _pages) do\n    params\n    |> Text.text(:previous)\n    |> Helpers.tag(:a,\n      class: \"exz-pagination-a\",\n      style: \"cursor: pointer\",\n      \"phx-click\": \"change_page\",\n      \"phx-value-page\": page - 1\n    )\n    |> Helpers.tag(:li, class: \"exz-pagination-li\")\n  end\n\n  defp paginate_button(_params, page, page, _pages) when is_integer(page) do\n    Helpers.tag(page, :a, class: \"exz-pagination-a exz-pagination-width\")\n    |> Helpers.tag(:li, class: \"exz-pagination-li-active\")\n  end\n\n  defp paginate_button(_params, page, _page, _pages) when is_integer(page) do\n    Helpers.tag(page, :a,\n      class: \"exz-pagination-a exz-pagination-width\",\n      style: \"cursor: pointer\",\n      \"phx-click\": \"change_page\",\n      \"phx-value-page\": page\n    )\n    |> Helpers.tag(:li, class: \"exz-pagination-li\")\n  end\n\n  @spec filter_pages(pos_integer, pos_integer) :: [pos_integer | :dots]\n  @doc \"Selects the page buttons we need for pagination\"\n  def filter_pages(pages, _page) when pages <= 7, do: Enum.to_list(1..pages)\n\n  def filter_pages(pages, page) when page in [1, 2, 3, pages - 2, pages - 1, pages] do\n    [1, 2, 3, :dots, pages - 2, pages - 1, pages]\n  end\n\n  def filter_pages(pages, page) do\n    [1, :dots, page - 1, page, page + 1, :dots, pages]\n  end\nend\n"
        }
    ]
}